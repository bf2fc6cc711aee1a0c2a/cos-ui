name: E2E Test
on: [pull_request]
jobs:
  cypress:
    name: Cypress

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ["16.6.2"]
        os: [ubuntu-latest]

    # Cypress Docker image with Chrome v78
    # and Firefox v70 pre-installed
    container: cypress/browsers:latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node modules
        id: npm-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-v2
        with:
          path: |
            .npm
            .cache/Cypress
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies if needed.
        if: steps.npm-cache.outputs.cache-hit != 'true'
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: npm ci

      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          # we have already installed everything
          install: false
          start: npm run start:e2e
          wait-on: "http://localhost:3001"
          wait-on-timeout: 120

      - name: upload Cypress screenshots for failed tests
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      # Test run video was always captured, so this action uses "always()" condition
      - name: upload Cypress test run video
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
