{
  "kind": "ConnectorTypeList",
  "page": 1,
  "size": 6,
  "total": 6,
  "items": [
    {
      "id": "aws-kinesis-source",
      "labels": [
        "source"
      ],
      "kind": "ConnectorType",
      "href": "/api/connector_mgmt/v1/kafka_connector_types/aws-kinesis-source",
      "name": "aws-kinesis-source",
      "version": "v1alpha1",
      "description": "Receive data from AWS Kinesis.",
      "schema": {
        "$defs": {
          "error_handler": {
            "dead_letter_queue": {
              "additionalProperties": false,
              "properties": {
                "topic": {
                  "description": "The name of the Kafka topic used as dead letter queue",
                  "title": "Dead Letter Topic Name",
                  "type": "string"
                }
              },
              "required": [
                "topic"
              ],
              "type": "object"
            },
            "log": {
              "additionalProperties": false,
              "type": "object"
            },
            "stop": {
              "additionalProperties": false,
              "type": "object"
            }
          }
        },
        "type": "object",
        "description": "Receive data from AWS Kinesis.",
        "properties": {
          "accessKey": {
            "description": "The access key obtained from AWS",
            "title": "Access Key",
            "type": "string",
            "x-descriptors": [
              "urn:alm:descriptor:com.tectonic.ui:password"
            ]
          },
          "region": {
            "description": "The AWS region to connect to (capitalized name)",
            "example": "EU_WEST_1",
            "title": "AWS Region",
            "type": "string"
          },
          "secretKey": {
            "description": "The secret key obtained from AWS",
            "title": "Secret Key",
            "type": "string",
            "x-descriptors": [
              "urn:alm:descriptor:com.tectonic.ui:password"
            ]
          },
          "stream": {
            "description": "The Kinesis stream that you want to access (needs to be created in advance)",
            "title": "Stream Name",
            "type": "string"
          },
          "error_handler": {
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "dead_letter_queue": {
                    "$ref": "#/$defs/error_handler/dead_letter_queue"
                  }
                },
                "required": [
                  "dead_letter_queue"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "log": {
                    "$ref": "#/$defs/error_handler/log"
                  }
                },
                "required": [
                  "log"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "stop": {
                    "$ref": "#/$defs/error_handler/stop"
                  }
                },
                "required": [
                  "stop"
                ],
                "type": "object"
              }
            ],
            "type": "object"
          }
        },
        "required": [
          "stream",
          "accessKey",
          "secretKey",
          "region"
        ],
        "title": "AWS Kinesis Source"
      }
    },
    {
      "id": "aws-sqs-source-v1alpha1",
      "labels": [
        "source"
      ],
      "kind": "ConnectorType",
      "href": "/api/connector_mgmt/v1/kafka_connector_types/aws-sqs-source-v1alpha1",
      "name": "aws-sqs-source",
      "version": "v1alpha1",
      "description": "Receive data from AWS SQS.",
      "schema": {
        "$defs": {
          "error_handler": {
            "dead_letter_queue": {
              "additionalProperties": false,
              "properties": {
                "topic": {
                  "description": "The name of the Kafka topic used as dead letter queue",
                  "title": "Dead Letter Topic Name",
                  "type": "string"
                }
              },
              "required": [
                "topic"
              ],
              "type": "object"
            },
            "log": {
              "additionalProperties": false,
              "type": "object"
            },
            "stop": {
              "additionalProperties": false,
              "type": "object"
            }
          }
        },
        "type": "object",
        "description": "Receive data from AWS SQS.",
        "properties": {
          "accessKey": {
            "description": "The access key obtained from AWS",
            "title": "Access Key",
            "type": "string",
            "x-descriptors": [
              "urn:alm:descriptor:com.tectonic.ui:password"
            ]
          },
          "deleteAfterRead": {
            "default": "true",
            "description": "Delete messages after consuming them",
            "title": "Auto-delete messages",
            "type": "boolean",
            "x-descriptors": [
              "urn:alm:descriptor:com.tectonic.ui:checkbox"
            ]
          },
          "queueNameOrArn": {
            "description": "The SQS Queue name or ARN",
            "title": "Queue Name",
            "type": "string"
          },
          "region": {
            "description": "The AWS region to connect to",
            "example": "eu-west-1",
            "title": "AWS Region",
            "type": "string"
          },
          "secretKey": {
            "description": "The secret key obtained from AWS",
            "title": "Secret Key",
            "type": "string",
            "x-descriptors": [
              "urn:alm:descriptor:com.tectonic.ui:password"
            ]
          },
          "error_handler": {
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "dead_letter_queue": {
                    "$ref": "#/$defs/error_handler/dead_letter_queue"
                  }
                },
                "required": [
                  "dead_letter_queue"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "log": {
                    "$ref": "#/$defs/error_handler/log"
                  }
                },
                "required": [
                  "log"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "stop": {
                    "$ref": "#/$defs/error_handler/stop"
                  }
                },
                "required": [
                  "stop"
                ],
                "type": "object"
              }
            ],
            "type": "object"
          }
        },
        "required": [
          "queueNameOrArn",
          "accessKey",
          "secretKey",
          "region"
        ],
        "title": "AWS SQS Source"
      }
    },
    {
      "id": "jira-source",
      "labels": [
        "source"
      ],
      "kind": "ConnectorType",
      "href": "/api/connector_mgmt/v1/kafka_connector_types/jira-source",
      "name": "jira-source",
      "version": "v1alpha1",
      "description": "Receive notifications about new issues from Jira.",
      "schema": {
        "$defs": {
          "error_handler": {
            "dead_letter_queue": {
              "additionalProperties": false,
              "properties": {
                "topic": {
                  "description": "The name of the Kafka topic used as dead letter queue",
                  "title": "Dead Letter Topic Name",
                  "type": "string"
                }
              },
              "required": [
                "topic"
              ],
              "type": "object"
            },
            "log": {
              "additionalProperties": false,
              "type": "object"
            },
            "stop": {
              "additionalProperties": false,
              "type": "object"
            }
          }
        },
        "type": "object",
        "description": "Receive notifications about new issues from Jira.",
        "properties": {
          "jiraUrl": {
            "description": "The URL of your instance of Jira",
            "example": "http://my_jira.com:8081",
            "title": "Jira URL",
            "type": "string"
          },
          "jql": {
            "description": "A query to filter issues",
            "example": "project=MyProject",
            "title": "JQL",
            "type": "string"
          },
          "password": {
            "description": "The password to access Jira",
            "title": "Password",
            "type": "string",
            "x-descriptors": [
              "urn:alm:descriptor:com.tectonic.ui:password"
            ]
          },
          "username": {
            "description": "The username to access Jira",
            "title": "Username",
            "type": "string"
          },
          "error_handler": {
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "dead_letter_queue": {
                    "$ref": "#/$defs/error_handler/dead_letter_queue"
                  }
                },
                "required": [
                  "dead_letter_queue"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "log": {
                    "$ref": "#/$defs/error_handler/log"
                  }
                },
                "required": [
                  "log"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "stop": {
                    "$ref": "#/$defs/error_handler/stop"
                  }
                },
                "required": [
                  "stop"
                ],
                "type": "object"
              }
            ],
            "type": "object"
          }
        },
        "required": [
          "jiraUrl",
          "username",
          "password"
        ],
        "title": "Jira Source"
      }
    },
    {
      "id": "salesforce-source",
      "labels": [
        "source"
      ],
      "kind": "ConnectorType",
      "href": "/api/connector_mgmt/v1/kafka_connector_types/salesforce-source",
      "name": "salesforce-source-source",
      "version": "v1alpha1",
      "description": "Receive updates from Salesforce.",
      "schema": {
        "$defs": {
          "error_handler": {
            "dead_letter_queue": {
              "additionalProperties": false,
              "properties": {
                "topic": {
                  "description": "The name of the Kafka topic used as dead letter queue",
                  "title": "Dead Letter Topic Name",
                  "type": "string"
                }
              },
              "required": [
                "topic"
              ],
              "type": "object"
            },
            "log": {
              "additionalProperties": false,
              "type": "object"
            },
            "stop": {
              "additionalProperties": false,
              "type": "object"
            }
          }
        },
        "type": "object",
        "description": "Receive updates from Salesforce.",
        "properties": {
          "clientId": {
            "description": "The Salesforce application consumer key",
            "title": "Consumer Key",
            "type": "string"
          },
          "clientSecret": {
            "description": "The Salesforce application consumer secret",
            "title": "Consumer Secret",
            "type": "string",
            "x-descriptors": [
              "urn:alm:descriptor:com.tectonic.ui:password"
            ]
          },
          "loginUrl": {
            "default": "https://login.salesforce.com",
            "description": "The Salesforce instance login URL",
            "title": "Login URL",
            "type": "string"
          },
          "password": {
            "description": "The Salesforce user password",
            "title": "Password",
            "type": "string",
            "x-descriptors": [
              "urn:alm:descriptor:com.tectonic.ui:password"
            ]
          },
          "query": {
            "description": "The query to execute on Salesforce",
            "example": "SELECT Id, Name, Email, Phone FROM Contact",
            "title": "Query",
            "type": "string"
          },
          "topicName": {
            "description": "The name of the topic/channel to use",
            "example": "ContactTopic",
            "title": "Topic Name",
            "type": "string"
          },
          "userName": {
            "description": "The Salesforce username",
            "title": "Username",
            "type": "string"
          },
          "error_handler": {
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "dead_letter_queue": {
                    "$ref": "#/$defs/error_handler/dead_letter_queue"
                  }
                },
                "required": [
                  "dead_letter_queue"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "log": {
                    "$ref": "#/$defs/error_handler/log"
                  }
                },
                "required": [
                  "log"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "stop": {
                    "$ref": "#/$defs/error_handler/stop"
                  }
                },
                "required": [
                  "stop"
                ],
                "type": "object"
              }
            ],
            "type": "object"
          }
        },
        "required": [
          "query",
          "topicName",
          "clientId",
          "clientSecret",
          "userName",
          "password"
        ],
        "title": "Salesforce Source"
      }
    },
    {
      "id": "slack-source",
      "labels": [
        "source"
      ],
      "kind": "ConnectorType",
      "href": "/api/connector_mgmt/v1/kafka_connector_types/slack-source",
      "name": "slack-source-source",
      "version": "v1alpha1",
      "description": "Receive messages from a Slack channel.",
      "schema": {
        "$defs": {
          "error_handler": {
            "dead_letter_queue": {
              "additionalProperties": false,
              "properties": {
                "topic": {
                  "description": "The name of the Kafka topic used as dead letter queue",
                  "title": "Dead Letter Topic Name",
                  "type": "string"
                }
              },
              "required": [
                "topic"
              ],
              "type": "object"
            },
            "log": {
              "additionalProperties": false,
              "type": "object"
            },
            "stop": {
              "additionalProperties": false,
              "type": "object"
            }
          }
        },
        "type": "object",
        "description": "Receive messages from a Slack channel.",
        "properties": {
          "channel": {
            "description": "The Slack channel to receive messages from",
            "example": "#myroom",
            "title": "Channel",
            "type": "string"
          },
          "token": {
            "description": "The token to access Slack. A Slack app is needed. This app needs to have channels:history and channels:read permissions. The Bot User OAuth Access Token is the kind of token needed.",
            "title": "Token",
            "type": "string",
            "x-descriptors": [
              "urn:alm:descriptor:com.tectonic.ui:password"
            ]
          },
          "error_handler": {
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "dead_letter_queue": {
                    "$ref": "#/$defs/error_handler/dead_letter_queue"
                  }
                },
                "required": [
                  "dead_letter_queue"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "log": {
                    "$ref": "#/$defs/error_handler/log"
                  }
                },
                "required": [
                  "log"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "stop": {
                    "$ref": "#/$defs/error_handler/stop"
                  }
                },
                "required": [
                  "stop"
                ],
                "type": "object"
              }
            ],
            "type": "object"
          }
        },
        "required": [
          "channel",
          "token"
        ],
        "title": "Slack Source"
      }
    },
    {
      "id": "telegram_source_0.1",
      "kind": "ConnectorType",
      "href": "/api/connector_mgmt/v1/kafka_connector_types/telegram_source_0.1",
      "name": "Telegram source",
      "version": "0.1",
      "channels": [
        "stable"
      ],
      "description": "Receive all messages that people send to your Telegram bot.",
      "icon_href": "TODO",
      "labels": [
        "source"
      ],
      "capabilities": [
        "data_shape",
        "error_handler",
        "processors"
      ],
      "schema": {
        "$defs": {
          "data_shape": {
            "produces": {
              "additionalProperties": false,
              "properties": {
                "format": {
                  "default": "application/json",
                  "description": "The format of the data that the source connector sends to Kafka.",
                  "enum": [
                    "application/json"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "format"
              ],
              "type": "object"
            }
          },
          "error_handler": {
            "dead_letter_queue": {
              "additionalProperties": false,
              "properties": {
                "topic": {
                  "description": "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error.",
                  "title": "Dead Letter Topic Name",
                  "type": "string"
                }
              },
              "required": [
                "topic"
              ],
              "type": "object"
            },
            "log": {
              "additionalProperties": false,
              "type": "object"
            },
            "stop": {
              "additionalProperties": false,
              "type": "object"
            }
          }
        },
        "additionalProperties": false,
        "properties": {
          "data_shape": {
            "additionalProperties": false,
            "properties": {
              "produces": {
                "$ref": "#/$defs/data_shape/produces"
              }
            },
            "type": "object"
          },
          "error_handler": {
            "default": {
              "stop": {
                
              }
            },
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "log": {
                    "$ref": "#/$defs/error_handler/log"
                  }
                },
                "required": [
                  "log"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "stop": {
                    "$ref": "#/$defs/error_handler/stop"
                  }
                },
                "required": [
                  "stop"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "dead_letter_queue": {
                    "$ref": "#/$defs/error_handler/dead_letter_queue"
                  }
                },
                "required": [
                  "dead_letter_queue"
                ],
                "type": "object"
              }
            ],
            "type": "object"
          },
          "kafka_topic": {
            "description": "The name of the Kafka Topic to use.",
            "title": "Topic Name",
            "type": "string"
          },
          "processors": {
            
          },
          "telegram_authorization_token": {
            "oneOf": [
              {
                "description": "The token to access your bot on Telegram. You you can obtain it from the Telegram @botfather.",
                "format": "password",
                "title": "Token",
                "type": "string"
              },
              {
                "description": "An opaque reference to the telegram_authorization_token",
                "properties": {
                  
                },
                "type": "object"
              }
            ],
            "title": "Token",
            "x-group": "credentials"
          }
        },
        "required": [
          "telegram_authorization_token",
          "kafka_topic"
        ],
        "type": "object"
      }
    }
  ]
}