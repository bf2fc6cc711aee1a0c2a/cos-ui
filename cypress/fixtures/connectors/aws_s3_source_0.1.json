{
  "connector_type" : {
    "json_schema" : {
      "type" : "object",
      "properties" : {
        "connector" : {
          "type" : "object",
          "title" : "AWS S3 Source",
          "required" : [ "bucketNameOrArn", "accessKey", "secretKey", "region" ],
          "properties" : {
            "bucketNameOrArn" : {
              "title" : "Bucket Name",
              "description" : "The S3 Bucket name or ARN",
              "type" : "string"
            },
            "deleteAfterRead" : {
              "title" : "Auto-delete Objects",
              "description" : "Delete objects after consuming them",
              "type" : "boolean",
              "default" : true
            },
            "accessKey" : {
              "title" : "Access Key",
              "oneOf" : [ {
                "title" : "Access Key",
                "description" : "The access key obtained from AWS",
                "type" : "string",
                "format" : "password"
              }, {
                "description" : "An opaque reference to the accessKey",
                "type" : "object",
                "properties" : { }
              } ]
            },
            "secretKey" : {
              "title" : "Secret Key",
              "oneOf" : [ {
                "title" : "Secret Key",
                "description" : "The secret key obtained from AWS",
                "type" : "string",
                "format" : "password"
              }, {
                "description" : "An opaque reference to the secretKey",
                "type" : "object",
                "properties" : { }
              } ]
            },
            "region" : {
              "title" : "AWS Region",
              "description" : "The AWS region to connect to",
              "type" : "string",
              "example" : "eu-west-1"
            },
            "autoCreateBucket" : {
              "title" : "Autocreate Bucket",
              "description" : "Setting the autocreation of the S3 bucket bucketName.",
              "type" : "boolean",
              "default" : false
            },
            "includeBody" : {
              "title" : "Include Body",
              "description" : "If it is true, the exchange will be consumed and put into the body and closed. If false the S3Object stream will be put raw into the body and the headers will be set with the S3 object metadata.",
              "type" : "boolean",
              "default" : true
            },
            "prefix" : {
              "title" : "Prefix",
              "description" : "The AWS S3 bucket prefix to consider while searching",
              "type" : "string",
              "example" : "folder/"
            },
            "ignoreBody" : {
              "title" : "Ignore Body",
              "description" : "If it is true, the S3 Object Body will be ignored completely, if it is set to false the S3 Object will be put in the body. Setting this to true, will override any behavior defined by includeBody option.",
              "type" : "boolean",
              "default" : false
            }
          }
        },
        "kafka" : {
          "type" : "object",
          "title" : "Managed Kafka Sink",
          "required" : [ "topic" ],
          "properties" : {
            "topic" : {
              "title" : "Topic names",
              "description" : "Comma separated list of Kafka topic names",
              "type" : "string"
            }
          }
        },
        "steps" : {
          "type" : "array",
          "items" : {
            "oneOf" : [ {
              "type" : "object",
              "required" : [ "insert-field" ],
              "properties" : {
                "insert-field" : {
                  "title" : "Insert Field Action",
                  "description" : "Adds a custom field with a constant value to the message in transit.\n\nThis action works with Json Object. So it will expect a Json Array or a Json Object.\n\nIf for example you have an array like '{ \"foo\":\"John\", \"bar\":30 }' and your action has been configured with field as 'element' and value as 'hello', you'll get '{ \"foo\":\"John\", \"bar\":30, \"element\":\"hello\" }'\n\nNo headers mapping supported, only constant values.",
                  "required" : [ "field", "value" ],
                  "properties" : {
                    "field" : {
                      "title" : "Field",
                      "description" : "The name of the field to be added",
                      "type" : "string"
                    },
                    "value" : {
                      "title" : "Value",
                      "description" : "The value of the field",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            }, {
              "type" : "object",
              "required" : [ "extract-field" ],
              "properties" : {
                "extract-field" : {
                  "title" : "Extract Field Action",
                  "description" : "Extract a field from the body",
                  "required" : [ "field" ],
                  "properties" : {
                    "field" : {
                      "title" : "Field",
                      "description" : "The name of the field to be added",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            } ]
          }
        }
      }
    },
    "id" : "aws_s3_source_0.1",
    "kind" : "ConnectorType",
    "icon_href" : "TODO",
    "name" : "AWS S3 Source",
    "description" : "AWS S3 Source",
    "version" : "0.1",
    "labels" : [ "source" ],
    "channels" : [ "stable" ]
  },
  "channels" : {
    "stable" : {
      "shard_metadata" : {
        "connector_revision" : "3",
        "connector_type" : "source",
        "connector_image" : "quay.io/lburgazzoli/mci:0.1.3-aws-s3-source-0.1",
        "operators" : [ {
          "type" : "camel-connector-operator",
          "version" : "[1.0.0,2.0.0)"
        } ],
        "kamelets" : {
          "connector" : "aws-s3-source",
          "kafka" : "managed-kafka-sink",
          "insert-field" : "insert-field-action",
          "extract-field" : "extract-field-action"
        }
      }
    }
  }
}