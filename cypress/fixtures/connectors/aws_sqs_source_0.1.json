{
  "channels" : {
    "stable" : {
      "shard_metadata" : {
        "annotations" : {
          "trait.camel.apache.org/container.request-cpu" : "0.20",
          "trait.camel.apache.org/container.request-memory" : "128m",
          "trait.camel.apache.org/deployment.progress-deadline-seconds" : "30"
        },
        "connector_image" : "quay.io/rhoas/cos-connector-aws-sqs:0.1.29",
        "connector_revision" : "29",
        "connector_type" : "source",
        "consumes" : "application/octet-stream",
        "error_handler_strategy" : "stop",
        "kamelets" : {
          "adapter" : {
            "name" : "aws-sqs-source",
            "prefix" : "aws"
          },
          "kafka" : {
            "name" : "cos-kafka-sink",
            "prefix" : "kafka"
          }
        },
        "operators" : [ {
          "type" : "camel-connector-operator",
          "version" : "[1.0.0,2.0.0)"
        } ],
        "produces" : "application/octet-stream"
      }
    }
  },
  "connector_type" : {
    "capabilities" : [ "data_shape", "error_handler", "processors" ],
    "channels" : [ "stable" ],
    "description" : "Amazon Simple Queue Service source",
    "icon_href" : "TODO",
    "id" : "aws_sqs_source_0.1",
    "kind" : "ConnectorType",
    "labels" : [ "source" ],
    "name" : "Amazon Simple Queue Service source",
    "schema" : {
      "type" : "object",
      "additionalProperties" : false,
      "required" : [ "aws_queue_name_or_arn", "aws_region", "kafka_topic", "aws_access_key", "aws_secret_key" ],
      "properties" : {
        "aws_queue_name_or_arn" : {
          "title" : "Queue Name",
          "description" : "The SQS Queue Name or ARN",
          "type" : "string"
        },
        "aws_delete_after_read" : {
          "title" : "Auto-delete Messages",
          "description" : "Delete messages after consuming them",
          "type" : "boolean",
          "default" : true
        },
        "aws_access_key" : {
          "title" : "Access Key",
          "x-group" : "credentials",
          "oneOf" : [ {
            "title" : "Access Key",
            "description" : "The access key obtained from AWS",
            "type" : "string",
            "format" : "password"
          }, {
            "description" : "An opaque reference to the aws_access_key",
            "type" : "object",
            "properties" : { }
          } ]
        },
        "aws_secret_key" : {
          "title" : "Secret Key",
          "x-group" : "credentials",
          "oneOf" : [ {
            "title" : "Secret Key",
            "description" : "The secret key obtained from AWS",
            "type" : "string",
            "format" : "password"
          }, {
            "description" : "An opaque reference to the aws_secret_key",
            "type" : "object",
            "properties" : { }
          } ]
        },
        "aws_region" : {
          "title" : "AWS Region",
          "description" : "The AWS region to connect to",
          "type" : "string",
          "example" : "eu-west-1",
          "enum" : [ "af-south-1", "ap-east-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-south-1", "ap-southeast-1", "ap-southeast-2", "ap-southeast-3", "ca-central-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "fips-us-east-1", "fips-us-east-2", "fips-us-west-1", "fips-us-west-2", "me-south-1", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "cn-north-1", "cn-northwest-1", "us-gov-east-1", "us-gov-west-1", "us-iso-east-1", "us-iso-west-1", "us-isob-east-1" ]
        },
        "aws_auto_create_queue" : {
          "title" : "Autocreate Queue",
          "description" : "Setting the autocreation of the SQS queue.",
          "type" : "boolean",
          "default" : false
        },
        "aws_amazon_a_w_s_host" : {
          "title" : "AWS Host",
          "description" : "The hostname of the Amazon AWS cloud.",
          "type" : "string",
          "default" : "amazonaws.com"
        },
        "aws_protocol" : {
          "title" : "Protocol",
          "description" : "The underlying protocol used to communicate with SQS",
          "type" : "string",
          "example" : "http or https",
          "default" : "https"
        },
        "aws_queue_u_r_l" : {
          "title" : "Queue URL",
          "description" : "The full SQS Queue URL (required if using KEDA)",
          "type" : "string"
        },
        "aws_uri_endpoint_override" : {
          "title" : "Overwrite Endpoint URI",
          "description" : "Set the overriding endpoint URI. This option needs to be used in combination with overrideEndpoint option.",
          "type" : "string"
        },
        "aws_override_endpoint" : {
          "title" : "Endpoint Overwrite",
          "description" : "Set the need for overiding the endpoint URI. This option needs to be used in combination with uriEndpointOverride setting.",
          "type" : "boolean",
          "default" : false
        },
        "aws_delay" : {
          "title" : "Delay",
          "description" : "Milliseconds before the next poll of the selected stream",
          "type" : "integer",
          "default" : 500
        },
        "kafka_topic" : {
          "title" : "Topic Names",
          "description" : "Comma separated list of Kafka topic names",
          "type" : "string"
        },
        "data_shape" : {
          "type" : "object",
          "additionalProperties" : false,
          "properties" : {
            "produces" : {
              "$ref" : "#/$defs/data_shape/produces"
            }
          }
        },
        "error_handler" : {
          "type" : "object",
          "oneOf" : [ {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "log" ],
            "properties" : {
              "log" : {
                "$ref" : "#/$defs/error_handler/log"
              }
            }
          }, {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "stop" ],
            "properties" : {
              "stop" : {
                "$ref" : "#/$defs/error_handler/stop"
              }
            }
          }, {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "dead_letter_queue" ],
            "properties" : {
              "dead_letter_queue" : {
                "$ref" : "#/$defs/error_handler/dead_letter_queue"
              }
            }
          } ],
          "default" : {
            "stop" : { }
          }
        },
        "processors" : { }
      },
      "$defs" : {
        "data_shape" : {
          "produces" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "format" ],
            "properties" : {
              "format" : {
                "type" : "string",
                "default" : "application/octet-stream",
                "enum" : [ "application/octet-stream" ]
              }
            }
          }
        },
        "error_handler" : {
          "log" : {
            "type" : "object",
            "additionalProperties" : false
          },
          "stop" : {
            "type" : "object",
            "additionalProperties" : false
          },
          "dead_letter_queue" : {
            "type" : "object",
            "additionalProperties" : false,
            "required" : [ "topic" ],
            "properties" : {
              "topic" : {
                "type" : "string",
                "title" : "Dead Letter Topic Name",
                "description" : "The name of the Kafka topic used as dead letter queue"
              }
            }
          }
        }
      }
    },
    "version" : "0.1"
  }
}